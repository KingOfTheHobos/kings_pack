# Configuration file

biome {
    I:biomeDegraded=105
}


block {
    B:blockBlood=true
    B:blockPoison=true
    B:bloodChest=true
    B:bloodInfuser=true
    B:bloodStainedBlock=true
    B:bloodyCobblestone=true
    B:boxOfEternalClosure=true
    B:darkBlock=true
    B:darkBloodBrick=true
    B:darkBrick=true
    B:darkOre=true
    B:environmentalAccumulator=true
    B:excrementPile=true
    B:hardenedBlood=true
    B:invisibleRedstoneBlock=true
    B:lightningBomb=true
    B:netherMonsterBlock=true
    B:obscuredGlass=true
    B:purifier=true
    B:spiritFurnace=true
    B:undeadLeaves=true
    B:undeadLog=true
    B:undeadPlank=true
    B:undeadSapling=true
}


core {
    B:info.debug=false
    S:info.version=0.4.2b
}


"degradation effect" {
    B:biome=true
    B:knockbackDistort=true
    B:mobSpawn=true
    B:nauseate=true
    B:particle=true
    B:sound=true
    B:terraform=false
}


enchantment {
    I:breaking=101
    I:lifeStealing=102
    I:poisonTip=104
    I:unusing=103
}


entity {
    # The amount of ticks (on average), this bomb should tick before explosion.
    I:entityLightningBomb.fuse=100
}


fluid {
    S:info.bloodConverters <
        blood:1.0
        life essence:1.0
     >
}


general {
    # If the Blood Chest should add random bad enchants with a small chance to repairing items.
    B:bloodChest.addRandomBadEnchants=true

    # The amount Blood mB required for repairing one damage value.
    I:bloodChest.mBPerDamage=5

    # If the Blood Chest should be able to repair tools from Tinkers' Construct
    B:bloodChest.repairTConstructTools=true

    # The amount of ticks required for repairing one damage value.
    I:bloodChest.ticksPerDamage=2

    # The base amount of blood (mB) this container can hold * the level of container.
    I:bloodContainer.containerSizeBase=5000

    # The amount of blood (mB) this container can hold.
    I:bloodExtractor.containerSize=5000

    # The maximum amount of blood (mB) that can be extracted from this block. IMPORTANT: must be larger than minMB!
    I:bloodExtractor.maxMB=750

    # The maximum multiplier for amount of mB to receive per mob HP. IMPORTANT: must be larger than maximumMobMultiplier!
    D:bloodExtractor.maximumMobMultiplier=40.0

    # The minimum amount of blood (mB) that can be extracted from this block.
    I:bloodExtractor.minMB=250

    # The minimum multiplier for amount of mB to receive per mob HP.
    D:bloodExtractor.minimumMobMultiplier=5.0

    # Defines the maximum number of blocks the client's broom should move when we notice there is a desync between the client's and server's position.
    D:broom.desyncCorrectionValue=0.4

    # Defines the maximum number of blocks the client's broom position can be out of sync with the position sent by the server.
    D:broom.desyncThreshold=1.0

    # Sets the default default speed in increments per tick with which an item will move when being process by an environmental accumulator.
    D:envirAcc.defaultProcessItemSpeed=0.015

    # Sets the default amount of ticks the environmental accumulator takes to process an item.
    I:envirAcc.defaultProcessItemTickCount=100

    # Sets the default amount of ticks the environmental accumulator takes to cool down
    I:envirAcc.defaultTickCooldown=12000
    D:environmentalAccumulator.defaultProcessItemSpeed=0.015
    I:environmentalAccumulator.defaultProcessItemTickCount=100
    I:environmentalAccumulator.defaultTickCooldown=12000

    # The relative effectiveness when compared to bonemeal if shift right click using.
    I:excrementPile.effectiveness=3

    # If Excrement can also poison any mob next to players.
    B:excrementPile.poisonEntities=false
    B:info.dieWithoutAnyReason=false
    B:info.farting=true
    B:info.versionChecker=true

    # If the Kineticator should also attract XP orbs.
    B:kineticator.moveXP=true

    # If crafting of the ender pearl should be enabled.
    B:potentiaSphere.enderPearlRecipe=true

    # If the redstone grenade should drop again as an item after it is being thrown.
    B:redstoneGrenade.dropAfterUsage=false

    # How much mB per tick this furnace should consume.
    I:spiritFurnace.mBPerTick=5

    # The required amount of ticks for each HP for cooking an entity.
    I:spiritFurnace.requiredTicksPerHp=10

    # The area of effect in blocks in which this tool could enable vengeance spirits.
    I:vengeancePickaxe.areaOfEffect=5

    # The ^-1 chance for which vengeance spirits could be toggled.
    I:vengeancePickaxe.vengeanceChance=1

    # The area of effect in # blocks of this ring.
    I:vengeanceRing.areaOfEffect=10
}


item {
    B:bloodContainer=true
    B:bloodExtractor=true
    B:bloodInfusionCore=true
    B:bloodPearlOfTeleportation=true
    B:blook=true
    B:broom=true
    B:bucketBlood=true
    B:bucketPoison=true
    B:burningGemStone=true

    # How much damage this item can take.
    I:burningGemStone.maxDamage=128
    B:darkGem=true
    B:darkGemCrushed=true
    B:darkPowerGem=true
    B:darkStick=true
    B:hardenedBloodShard=true
    B:invertedPotentia=true
    B:kineticator=true
    B:lightningGrenade=true
    B:maceOfDistortion=true
    B:poisonSac=true
    B:potentiaSphere=true
    B:redstoneGrenade=true
    B:vengeanceFocus=true
    B:vengeancePickaxe=true
    B:vengeanceRing=true
    B:weatherContainer=true
    B:werewolfBone=true
    B:werewolfFlesh=true
    B:werewolfFur=true
}


mob {
    # Should the Netherfish be enabled?
    B:netherfish.isEnabled=true

    # Should the Poisonous Libelle do damage, next to poisoning?
    B:poisonousLibelle.hasAttackDamage=false

    # Should the Poisonous Libelle be enabled?
    B:poisonousLibelle.isEnabled=true

    # The blacklisted entity spirits, by entity name.
    S:vengeanceSpirit.entityBlacklist <
        werewolf
     >

    # Should the Vengeance Spirit be enabled?
    B:vengeanceSpirit.isEnabled=true

    # The maximum amount of vengeance spirits naturally spawnable in the spawnLimitArea.
    I:vengeanceSpirit.spawnLimit=5

    # The area in which the spawn limit will be checked on each spawn attempt.
    I:vengeanceSpirit.spawnLimitArea=5

    # Should the Werewolf be enabled?
    B:werewolf.isEnabled=true

    # Should the Werewolf villager be enabled?
    B:werewolfVillager.isEnabled=true

    # The id of the Werewolf villager.
    I:werewolfVillager.villagerID=66666
}


oregeneration {
    # How much ores per vein.
    I:darkOre.blocksPerVein=4

    # Generation ends of this level.
    I:darkOre.endY=66

    # Generation starts from this level.
    I:darkOre.startY=6

    # How many veins per chunk.
    I:darkOre.veinsPerChunk=10
    B:info.extraSilverfish=false

    # How many veins per chunk.
    I:netherMonsterBlock.veinsPerChunk=250
}


worldgeneration {
    I:info.darkTempleMaxHeight=256
    I:info.darkTempleMinDistance=300
    I:info.darkTempleMinHeight=90
    I:info.darkTempleRarity=1000
}


